{"version":3,"sources":["EmitterClass.js"],"names":["EventEmitter","require","mEmitter","_emitter","setMaxListeners","emit","event","listener","on","once","removeListener","removeAllListeners","instance","module","exports"],"mappings":";;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,eAAeC,QAAQ,QAAR,CAArB;;IAEMC;AACF,wBAAc;AAAA;;AACV,aAAKC,QAAL,GAAgB,IAAIH,YAAJ,EAAhB;AACA,aAAKG,QAAL,CAAcC,eAAd,CAA8B,GAA9B;AACH;;;;+BAEa;AAAA;;AACV,6BAAKD,QAAL,EAAcE,IAAd;AACH;;;sCAEaC,OAAMC,UAAU;AAC1B,iBAAKJ,QAAL,CAAcK,EAAd,CAAiBF,KAAjB,EAAuBC,QAAvB;AACH;;;qCAEYD,OAAMC,UAAU;AACzB,iBAAKJ,QAAL,CAAcM,IAAd,CAAmBH,KAAnB,EAAyBC,QAAzB;AACH;;;oCAEWD,OAAMC,UAAU;AACxB,iBAAKJ,QAAL,CAAcO,cAAd,CAA6BJ,KAA7B,EAAmCC,QAAnC;AACH;;;kCAES;AACN,iBAAKJ,QAAL,CAAcQ,kBAAd;AACA,iBAAKR,QAAL,GAAgB,IAAhB;AACAD,qBAASU,QAAT,GAAoB,IAApB;AACH;;;;;;AAELV,SAASU,QAAT,GAAoB,IAApB;AACAC,OAAOC,OAAP,GAAiBZ,QAAjB","file":"EmitterClass.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst EventEmitter = require('events')\n\nclass mEmitter {\n    constructor() {\n        this._emitter = new EventEmitter();\n        this._emitter.setMaxListeners(100);\n    }\n\n    emit(...args) {\n        this._emitter.emit(...args);\n    }\n\n    registerEvent(event,listener) {\n        this._emitter.on(event,listener)\n    }\n\n    registerOnce(event,listener) {\n        this._emitter.once(event,listener);\n    }\n\n    removeEvent(event,listener) {\n        this._emitter.removeListener(event,listener)\n    }\n\n    destroy() {\n        this._emitter.removeAllListeners();\n        this._emitter = null;\n        mEmitter.instance = null;\n    }\n}\nmEmitter.instance = null;\nmodule.exports = mEmitter;"]}