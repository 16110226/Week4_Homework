{"version":3,"sources":["Editbox.js"],"names":["valid","require","mEmitter","cc","Class","extends","Component","properties","userName","EditBox","passWord","userTip","Label","passTip","_checkPass","_checkUser","_singedUp","onLoad","instance","registerEvent","signedUp","bind","clicked","log","saveInformation","string","editUser","node","active","editPass","validaterPass","str","format","lower","upper","number","textLabel","length","test","emit","validateUser","date","Date","seconds","getSeconds","parseInt","minutes","getMinutes","hour","getHours","time","start"],"mappings":"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","file":"Editbox.js","sourceRoot":"../../../../assets/Script","sourcesContent":["// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nvar valid = require('./ValidateEditbox')\nconst mEmitter = require('./EmitterClass')\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        userName: cc.EditBox,\n        passWord: cc.EditBox,\n        userTip: cc.Label,\n        passTip: cc.Label,\n        _checkPass: false,\n        _checkUser: false,\n        _singedUp: false,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        mEmitter.instance.registerEvent('SignedUp', this.signedUp.bind(this));\n    },\n\n    signedUp(clicked) {\n        if (clicked) {\n            cc.log('Run')\n            this.saveInformation();\n            this.userName.string = '';\n            this.passWord.string = '';\n        }\n    },\n\n    editUser() {\n        this.passTip.node.active = false;\n        this.userTip.node.active = true;\n        this.userTip.string = 'Please input your username. No special character';\n    },\n\n    editPass() {\n        this.userTip.node.active = false;\n        this.passTip.node.active = true;\n        this.passTip.string = 'Please input your password. No special character';\n    },\n\n    validaterPass(str) {\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n        var lower = /[a-z]/\n        var upper = /[A-Z]/\n        var number = /[0-9]/\n        if (str.textLabel.string.length > 12) {\n            this.passTip.node.active = true;\n            this.passTip.string = 'Password cannot have more than 12 characters';\n        } else if (format.test(str.textLabel.string)) {\n            this.passTip.node.active = true;\n            this.passTip.string = 'Password cannot contain special character';\n        } else if (str.textLabel.string.length < 6) {\n            this.passTip.string = 'Password must have at least 6 characters';\n            this.passTip.node.active = true;\n        } else if (!lower.test(str.textLabel.string) || !upper.test(str.textLabel.string) || !number.test(str.textLabel.string)) {\n            this.passTip.node.active = true;\n            this.passTip.string = 'Password must contain at least 1 lower, 1 upper character and 1 number';\n        } else {\n            this.passTip.node.active = false;\n            this._checkPass = true;\n            mEmitter.instance.emit('CheckInteractable', this._checkUser, this._checkPass);\n        }\n    },\n\n    validateUser(str) {\n        var format = /[ `!@#$%^&*()_+\\-=\\[\\]{};':\"\\\\|,.<>\\/?~]/;\n        if (format.test(str.textLabel.string)) {\n            this.userTip.node.active = true;\n            this.userTip.string = 'Username cannot contain special character';\n        } else if (str.length > 10) {\n            this.userTip.node.active = true;\n            this.userTip.string = 'Username cannot have more than 10 characters';\n        } else {\n            this.userTip.node.active = false;\n            this._checkUser = true;\n            mEmitter.instance.emit('CheckInteractable', this._checkUser, this._checkPass);\n        }\n    },\n\n    saveInformation() {\n        var date = new Date();\n        var seconds = date.getSeconds();\n        if (parseInt(seconds) < 10) seconds = '0' + seconds;\n        var minutes = date.getMinutes();\n        if (parseInt(minutes) < 10) minutes = '0' + minutes;\n        var hour = date.getHours();\n        if (parseInt(hour) < 10) hour = '0' + hour;\n        var str = this.userName.textLabel.string + \"     \" + hour + ':' + minutes + ':' + seconds;\n        var time = [hour,minutes,seconds]\n        mEmitter.instance.emit('Update',str);\n        mEmitter.instance.emit('Welcome',this.userName.textLabel.string,time);\n    },\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n"]}